<h2>
    Drafting: #{cubename}

$if draftdone
    <p>
        The draft is complete!  Thanks for playing!
$if isNextDrafter
    <p>
        Your turn to draft! Click on a card in the cube list below to make a pick
<table .table .table-striped .table-bordered .table-condensed id="draft-table">
    <thead>
        <tr>
            <th>
            $forall (col, Entity pid participant) <- zip (enumFrom 0) participants
                <th>
                    <a href=@{PicksByParticipantR draftId pid}>
                        #{pseudonym participant}
                    $if timestamp
                        <br>
                        #{prettyTimeDiff (timediffByCol col)}
            <th>
    $forall row <- enumFromTo 0 lastRow
        <tr>
            <td>
                #{row + 1}.
                $if isLeftToRightRow draft row
                    <span .glyphicon .glyphicon-arrow-right>
                $else
                    <span .glyphicon .glyphicon-arrow-down>
                $if timestamp
                    <br>
                    #{prettyTimeDiff (timediffByRow row)}
            $forall col <- zipWith const (enumFrom 0) participants
                <td>
                    $maybe (pick, details) <- Map.lookup (rcToPickNum draft (row, col)) pickmap
                        ^{prettyCard details}
                        $if timestamp
                            <br>
                            <date .convlocale>#{utcTo8601 $ pick ^. pickCreated}
                            $maybe td <- Map.lookup (rcToPickNum draft (row, col)) timediffByCell
                                <br>
                                #{prettyTimeDiff td}
                    $nothing
                        <span .glyphicon .glyphicon-question-sign>
                        $maybe (prevpick, _) <- Map.lookup (pred $ rcToPickNum draft (row, col)) pickmap
                            <time .timeago datetime=#{utcTo8601 $ prevpick ^. pickCreated}>
            <td>
                $if isLeftToRightRow draft row
                    <span .glyphicon .glyphicon-arrow-down>
                $else
                    <span .glyphicon .glyphicon-arrow-left>

$if commissioner
    <h3>Commissioner tools
    <form method=POST action=@{ForceNextReservedPickR draftId}>
        <button .btn .btn-warning type=submit>
            Automatically make the next draft pick from reserved cards

$case mreservedCards
    $of Just reservedCards
        $if not $ null reservedCards
            <h3>Reserved Cards
            <ol>
                $forall card <- reservedCards
                    <li>
                        <form method=POST action=@{DeleteReserveDraftPickR draftId card}>
                            <button .btn .btn-xs .btn-danger type=submit>
                                <span .glyphicon .glyphicon-remove>
                            #{card}
    $of _
<h3>Unpicked Cards
<span .glyphicon .glyphicon-search>
<input name=search id=search placeholder=Search type=search data-list=".unpicked">
^{cardListView allowedCards "unpicked" linkpick}
